{"version":3,"file":"popper-utils.es5.js.map","sources":["../src/popper/utils/getStyleComputedProperty.js","../src/popper/utils/getParentNode.js","../src/popper/utils/getScrollParent.js","../src/popper/utils/isOffsetContainer.js","../src/popper/utils/getRoot.js","../src/popper/utils/getOffsetParent.js","../src/popper/utils/findCommonOffsetParent.js","../src/popper/utils/getScroll.js","../src/popper/utils/includeScroll.js","../src/popper/utils/getBordersSize.js","../src/popper/utils/getWindowSizes.js","../src/popper/utils/getClientRect.js","../src/popper/utils/isIE10.js","../src/popper/utils/getBoundingClientRect.js","../src/popper/utils/getOffsetRectRelativeToArbitraryNode.js","../src/popper/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/popper/utils/isFixed.js","../src/popper/utils/getBoundaries.js","../src/popper/utils/computeAutoPlacement.js","../src/popper/utils/isNative.js","../src/popper/utils/debounce.js","../src/popper/utils/find.js","../src/popper/utils/findIndex.js","../src/popper/utils/getOffsetRect.js","../src/popper/utils/getOuterSizes.js","../src/popper/utils/getOppositePlacement.js","../src/popper/utils/getPopperOffsets.js","../src/popper/utils/getReferenceOffsets.js","../src/popper/utils/getSupportedPropertyName.js","../src/popper/utils/getTotalScroll.js","../src/popper/utils/isFunction.js","../src/popper/utils/isModifierEnabled.js","../src/popper/utils/isModifierRequired.js","../src/popper/utils/isNumeric.js","../src/popper/utils/removeEventListeners.js","../src/popper/utils/runModifiers.js","../src/popper/utils/setAttributes.js","../src/popper/utils/setStyles.js","../src/popper/utils/setupEventListeners.js","../src/popper/utils/index.js"],"sourcesContent":["/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export default function isOffsetContainer(element) {\n  return (\n    element.nodeName === 'HTML' ||\n    element.firstElementChild.offsetParent === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  return offsetParent;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    element1 !== commonAncestorContainer && element2 !== commonAncestorContainer\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {Number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles - result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {Number} borders - the borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    +styles[`border${sideA}Width`].split('px')[0] +\n    +styles[`border${sideB}Width`].split('px')[0]\n  );\n}\n","export default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  return {\n    height: Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    ),\n    width: Math.max(\n      body.scrollWidth,\n      body.offsetWidth,\n      html.clientWidth,\n      html.scrollWidth,\n      html.offsetWidth\n    ),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","/**\n * Tells if you are running Internet Explorer 10\n * @returns {Boolean} isIE10\n */\nexport default function() {\n  return navigator.appVersion.indexOf('MSIE 10') !== -1;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport runIsIE10 from './isIE10';\nconst isIE10 = runIsIE10();\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10) {\n    try {\n      rect = element.getBoundingClientRect();\n    } catch (err) {}\n    const scrollTop = getScroll(element, 'top');\n    const scrollLeft = getScroll(element, 'left');\n    rect.top += scrollTop;\n    rect.left += scrollLeft;\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\nconst isIE10 = runIsIE10();\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top,\n    left: childrenRect.left - parentRect.left,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (isHTML || parent.nodeName === 'BODY') {\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderTopWidth.split('px')[0];\n    const borderLeftWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderLeftWidth.split('px')[0];\n    const marginTop = isIE10 && isHTML ? 0 : +styles.marginTop.split('px')[0];\n    const marginLeft = isIE10 && isHTML ? 0 : +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    parent.contains(scrollParent) &&\n    (isIE10 || scrollParent.nodeName !== 'BODY')\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode\n  from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {Object} data - Object containing the property \"offsets\" generated by `_getOffsets`\n * @param {Number} padding - Boundaries padding\n * @param {Element} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(popper, reference, 0, 'scrollParent');\n\n  const sides = {\n    top: refRect.top - boundaries.top,\n    right: boundaries.right - refRect.right,\n    bottom: boundaries.bottom - refRect.bottom,\n    left: refRect.left - boundaries.left,\n  };\n\n  const computedPlacement = Object.keys(sides).sort(\n    (a, b) => sides[b] - sides[a]\n  )[0];\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @argument {Function | undefined} fn the function to check\n * @returns {boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import getWindowSizes from './getWindowSizes';\nimport getClientRect from './getClientRect';\n\n/**\n * Get the position of the given element, relative to its offset parent\n * @method\n * @memberof Popper.Utils\n * @param {Element} element\n * @return {Object} position - Coordinates of the element and its `scrollTop`\n */\nexport default function getOffsetRect(element) {\n  let elementRect;\n  if (element.nodeName === 'HTML') {\n    const { width, height } = getWindowSizes();\n    elementRect = {\n      width,\n      height,\n      left: 0,\n      top: 0,\n    };\n  } else {\n    elementRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      left: element.offsetLeft,\n      top: element.offsetTop,\n    };\n  }\n\n  // position\n  return getClientRect(elementRect);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one/\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(\n  position,\n  popper,\n  referenceOffsets,\n  placement\n) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    position,\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'webkit', 'moz', 'o'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import getScrollParent from './getScrollParent';\nimport getScroll from './getScroll';\nimport getParentNode from './getParentNode';\nimport isOffsetContainer from './isOffsetContainer';\nimport isFixed from './isFixed';\n\n/**\n * Gets the scroll value of the given element relative to the given parent/\n * It will not include the scroll values of elements that aren't positioned.\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} parent\n * @argument {String} side `top` or `left`\n * @returns {Number} amount of scrolled pixels\n */\nexport default function getTotalScroll(element, parent, side = 'top') {\n  const scrollParent = getScrollParent(element);\n  let scroll = 0;\n  const isParentFixed = isFixed(parent);\n\n  // NOTE: I'm not sure the second line of this check is completely correct, review it if\n  // someone complains about viewport problems in future\n  if (\n    isOffsetContainer(\n      scrollParent.nodeName === 'BODY'\n        ? window.document.documentElement\n        : scrollParent\n    ) &&\n    ((parent.contains(scrollParent) && isParentFixed) || !isParentFixed)\n  ) {\n    scroll = getScroll(scrollParent, side);\n  }\n\n  if (\n    parent === scrollParent ||\n    ['BODY', 'HTML'].indexOf(scrollParent.nodeName) === -1\n  ) {\n    return scroll + getTotalScroll(getParentNode(scrollParent), parent, side);\n  }\n  return scroll;\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {*} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  return (\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    })\n  );\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\n\n/**\n * Loop trough the list of modifiers and run them in order, each of them will then edit the data object\n * @method\n * @memberof Popper.Utils\n * @param {Object} data\n * @param {Array} modifiers\n * @param {Function} ends\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.enabled && isFunction(modifier.function)) {\n      data = modifier.function(data, modifier);\n    }\n  });\n\n  return data;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 && isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import computeAutoPlacement from './computeAutoPlacement';\nimport debounce from './debounce';\nimport findIndex from './findIndex';\nimport getBordersSize from './getBordersSize';\nimport getBoundaries from './getBoundaries';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getClientRect from './getClientRect';\nimport getOffsetParent from './getOffsetParent';\nimport getOffsetRect from './getOffsetRect';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getOuterSizes from './getOuterSizes';\nimport getParentNode from './getParentNode';\nimport getPopperOffsets from './getPopperOffsets';\nimport getReferenceOffsets from './getReferenceOffsets';\nimport getScroll from './getScroll';\nimport getScrollParent from './getScrollParent';\nimport getStyleComputedProperty from './getStyleComputedProperty';\nimport getSupportedPropertyName from './getSupportedPropertyName';\nimport getTotalScroll from './getTotalScroll';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport isFunction from './isFunction';\nimport isModifierEnabled from './isModifierEnabled';\nimport isModifierRequired from './isModifierRequired';\nimport isNative from './isNative';\nimport isNumeric from './isNumeric';\nimport removeEventListeners from './removeEventListeners';\nimport runModifiers from './runModifiers';\nimport setAttributes from './setAttributes';\nimport setStyles from './setStyles';\nimport setupEventListeners from './setupEventListeners';\n\n/** @namespace Popper.Utils */\nexport default {\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getTotalScroll,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNative,\n  isNumeric,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners,\n};\n"],"names":["getStyleComputedProperty","element","property","nodeType","css","window","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","indexOf","document","body","overflow","overflowX","overflowY","test","isOffsetContainer","firstElementChild","offsetParent","getRoot","node","getOffsetParent","documentElement","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","split","getWindowSizes","Math","max","scrollHeight","offsetHeight","clientHeight","scrollWidth","offsetWidth","clientWidth","getClientRect","offsets","width","height","navigator","appVersion","isIE10","runIsIE10","getBoundingClientRect","err","result","sizes","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","children","parent","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","contains","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","offset","isFixed","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","computeAutoPlacement","placement","refRect","sides","computedPlacement","Object","keys","sort","a","b","variation","nativeHints","some","fn","toString","hint","isBrowser","longerTimeoutBrowsers","timeoutDuration","i","length","userAgent","microtaskDebounce","scheduled","elem","createElement","observer","MutationObserver","observe","attributes","setAttribute","taskDebounce","supportsNativeMutationObserver","isNative","find","arr","check","Array","prototype","filter","findIndex","prop","value","cur","match","obj","getOffsetRect","elementRect","offsetLeft","offsetTop","getOuterSizes","x","parseFloat","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","position","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","getReferenceOffsets","state","commonOffsetParent","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","slice","prefix","toCheck","style","getTotalScroll","scroll","isParentFixed","isFunction","functionToCheck","getType","call","isModifierEnabled","modifiers","modifierName","name","enabled","isModifierRequired","requestingName","requestedName","requesting","isNumeric","n","isNaN","isFinite","removeEventListeners","removeEventListener","updateBound","scrollParents","forEach","scrollElement","eventsEnabled","runModifiers","data","ends","modifiersToRun","undefined","function","setAttributes","removeAttribute","setStyles","unit","attachToScrollParents","event","callback","isBody","target","addEventListener","passive","push","setupEventListeners","options"],"mappings":"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"}