{"version":3,"file":"popper.js.map","sources":["../src/popper/utils/isNative.js","../src/popper/utils/debounce.js","../src/popper/utils/isNumeric.js","../src/popper/utils/setStyles.js","../src/popper/utils/getSupportedPropertyName.js","../src/popper/utils/isOffsetContainer.js","../src/popper/utils/getRoot.js","../src/popper/utils/getOffsetParent.js","../src/popper/utils/findCommonOffsetParent.js","../src/popper/utils/getStyleComputedProperty.js","../src/popper/utils/getScroll.js","../src/popper/utils/includeScroll.js","../src/popper/utils/getParentNode.js","../src/popper/utils/getScrollParent.js","../src/popper/utils/getBordersSize.js","../src/popper/utils/getWindowSizes.js","../src/popper/utils/getClientRect.js","../src/popper/utils/isIE10.js","../src/popper/utils/getBoundingClientRect.js","../src/popper/utils/getOffsetRectRelativeToArbitraryNode.js","../src/popper/utils/getReferenceOffsets.js","../src/popper/utils/getOuterSizes.js","../src/popper/utils/getOppositePlacement.js","../src/popper/utils/getPopperOffsets.js","../src/popper/utils/isFunction.js","../src/popper/utils/setupEventListeners.js","../src/popper/utils/removeEventListeners.js","../src/popper/utils/find.js","../src/popper/utils/findIndex.js","../src/popper/utils/runModifiers.js","../src/popper/utils/isModifierEnabled.js","../src/popper/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/popper/utils/isFixed.js","../src/popper/utils/getBoundaries.js","../src/popper/utils/computeAutoPlacement.js","../src/popper/utils/placements.js","../src/popper/utils/setAttributes.js","../src/popper/modifiers/applyStyle.js","../src/popper/utils/isModifierRequired.js","../src/popper/modifiers/arrow.js","../src/popper/utils/getOppositeVariation.js","../src/popper/utils/clockwise.js","../src/popper/modifiers/flip.js","../src/popper/modifiers/keepTogether.js","../src/popper/modifiers/offset.js","../src/popper/modifiers/preventOverflow.js","../src/popper/modifiers/shift.js","../src/popper/modifiers/hide.js","../src/popper/modifiers/inner.js","../src/popper/modifiers/index.js","../src/popper/index.js"],"sourcesContent":["const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @argument {Function | undefined} fn the function to check\n * @returns {boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 && isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'webkit', 'moz', 'o'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","export default function isOffsetContainer(element) {\n  return (\n    element.nodeName === 'HTML' ||\n    element.firstElementChild.offsetParent === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  return offsetParent;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    element1 !== commonAncestorContainer && element2 !== commonAncestorContainer\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {Number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles - result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {Number} borders - the borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    +styles[`border${sideA}Width`].split('px')[0] +\n    +styles[`border${sideB}Width`].split('px')[0]\n  );\n}\n","export default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  return {\n    height: Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    ),\n    width: Math.max(\n      body.scrollWidth,\n      body.offsetWidth,\n      html.clientWidth,\n      html.scrollWidth,\n      html.offsetWidth\n    ),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","/**\n * Tells if you are running Internet Explorer 10\n * @returns {Boolean} isIE10\n */\nexport default function() {\n  return navigator.appVersion.indexOf('MSIE 10') !== -1;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport runIsIE10 from './isIE10';\nconst isIE10 = runIsIE10();\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10) {\n    try {\n      rect = element.getBoundingClientRect();\n    } catch (err) {}\n    const scrollTop = getScroll(element, 'top');\n    const scrollLeft = getScroll(element, 'left');\n    rect.top += scrollTop;\n    rect.left += scrollLeft;\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\nconst isIE10 = runIsIE10();\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top,\n    left: childrenRect.left - parentRect.left,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (isHTML || parent.nodeName === 'BODY') {\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderTopWidth.split('px')[0];\n    const borderLeftWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderLeftWidth.split('px')[0];\n    const marginTop = isIE10 && isHTML ? 0 : +styles.marginTop.split('px')[0];\n    const marginLeft = isIE10 && isHTML ? 0 : +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    parent.contains(scrollParent) &&\n    (isIE10 || scrollParent.nodeName !== 'BODY')\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one/\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(\n  position,\n  popper,\n  referenceOffsets,\n  placement\n) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    position,\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {*} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\n\n/**\n * Loop trough the list of modifiers and run them in order, each of them will then edit the data object\n * @method\n * @memberof Popper.Utils\n * @param {Object} data\n * @param {Array} modifiers\n * @param {Function} ends\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.enabled && isFunction(modifier.function)) {\n      data = modifier.function(data, modifier);\n    }\n  });\n\n  return data;\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","import getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode\n  from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {Object} data - Object containing the property \"offsets\" generated by `_getOffsets`\n * @param {Number} padding - Boundaries padding\n * @param {Element} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(popper, reference, 0, 'scrollParent');\n\n  const sides = {\n    top: refRect.top - boundaries.top,\n    right: boundaries.right - refRect.right,\n    bottom: boundaries.bottom - refRect.bottom,\n    left: refRect.left - boundaries.left,\n  };\n\n  const computedPlacement = Object.keys(sides).sort(\n    (a, b) => sides[b] - sides[a]\n  )[0];\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","const placements = [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n\nexport default placements;\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * Apply the computed styles to the popper element\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data, options) {\n  // apply the final offsets to the popper\n  // NOTE: 1 DOM access here\n  const styles = {\n    position: data.offsets.popper.position,\n  };\n\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // round top and left to avoid blurry text\n  const left = Math.round(data.offsets.popper.left);\n  const top = Math.round(data.offsets.popper.top);\n\n  // if gpuAcceleration is set to true and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n  if (options.gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles.top = 0;\n    styles.left = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `left` and `top` properties\n    styles.left = left;\n    styles.top = top;\n    styles.willChange = 'top, left';\n  }\n\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, { ...styles, ...data.styles });\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, { ...attributes, ...data.attributes });\n\n  // if the arrow style has been computed, apply the arrow style\n  if (data.offsets.arrow) {\n    setStyles(data.arrowElement, data.offsets.arrow);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used to add margins to the popper\n * margins needs to be calculated to get the correct popper offsets\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  options.placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference\n  );\n\n  popper.setAttribute('x-placement', options.placement);\n  return options;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  return (\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    })\n  );\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\n\n/**\n * Modifier used to move the arrowElements on the edge of the popper to make sure them are always between the popper and the reference element\n * It will use the CSS outer size of the arrowElement element to know how many pixels of conjuction are needed\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    console.warn(\n      'WARNING: `keepTogether` modifier is required by arrow modifier in order to work, be sure to include it before `arrow`!'\n    );\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const side = isVertical ? 'top' : 'left';\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  let sideValue = center - getClientRect(data.offsets.popper)[side];\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = sideValue;\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one/\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import placements from '../utils/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getClientRect from '../utils/getClientRect';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * Modifier used to flip the placement of the popper when the latter is starting overlapping its reference element.\n * Requires the `preventOverflow` modifier before it in order to work.\n * **NOTE:** data.instance modifier will run all its previous modifiers everytime it tries to flip the popper!\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = getClientRect(data.offsets.popper);\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n      data.offsets.popper = getPopperOffsets(\n        data.instance.state.position,\n        data.instance.popper,\n        data.offsets.reference,\n        data.placement\n      );\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to make sure the popper is always near its reference element\n * It cares only about the first axis, you can still have poppers with margin\n * between the popper and its reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to add an offset to the popper, useful if you more granularity positioning your popper.\n * The offsets will shift the popper on the side of its reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n *      Basic usage allows a number used to nudge the popper by the given amount of pixels.\n *      You can pass a percentage value as string (eg. `20%`) to nudge by the given percentage (relative to reference element size)\n *      Other supported units are `vh` and `vw` (relative to viewport)\n *      Additionally, you can pass a pair of values (eg. `10 20` or `2vh 20%`) to nudge the popper\n *      on both axis.\n *      A note about percentage values, if you want to refer a percentage to the popper size instead of the reference element size,\n *      use `%p` instead of `%` (eg: `20%p`). To make it clearer, you can replace `%` with `%r` and use eg.`10%p 25%r`.\n *      > **Heads up!** The order of the axis is relative to the popper placement: `bottom` or `top` are `X,Y`, the other are `Y,X`\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, options) {\n  const placement = data.placement;\n  const popper = data.offsets.popper;\n\n  let offsets;\n  if (isNumeric(options.offset)) {\n    offsets = [options.offset, 0];\n  } else {\n    // split the offset in case we are providing a pair of offsets separated\n    // by a blank space\n    offsets = options.offset.split(' ');\n\n    // itherate through each offset to compute them in case they are percentages\n    offsets = offsets.map((offset, index) => {\n      // separate value from unit\n      const split = offset.match(/(\\d*\\.?\\d*)(.*)/);\n      const value = +split[1];\n      const unit = split[2];\n\n      // use height if placement is left or right and index is 0 otherwise use width\n      // in this way the first offset will use an axis and the second one\n      // will use the other one\n      let useHeight =\n        placement.indexOf('right') !== -1 || placement.indexOf('left') !== -1;\n\n      if (index === 1) {\n        useHeight = !useHeight;\n      }\n\n      const measurement = useHeight ? 'height' : 'width';\n\n      // if is a percentage relative to the popper (%p), we calculate the value of it using\n      // as base the sizes of the popper\n      // if is a percentage (% or %r), we calculate the value of it using as base the\n      // sizes of the reference element\n      if (unit.indexOf('%') === 0) {\n        let element;\n        switch (unit) {\n          case '%p':\n            element = data.offsets.popper;\n            break;\n          case '%':\n          case '$r':\n          default:\n            element = data.offsets.reference;\n        }\n\n        const rect = getClientRect(element);\n        const len = rect[measurement];\n        return len / 100 * value;\n      } else if (unit === 'vh' || unit === 'vw') {\n        // if is a vh or vw, we calculate the size based on the viewport\n        let size;\n        if (unit === 'vh') {\n          size = Math.max(\n            document.documentElement.clientHeight,\n            window.innerHeight || 0\n          );\n        } else {\n          size = Math.max(\n            document.documentElement.clientWidth,\n            window.innerWidth || 0\n          );\n        }\n        return size / 100 * value;\n      } else if (unit === 'px') {\n        // if is an explicit pixel unit, we get rid of the unit and keep the value\n        return +value;\n      } else {\n        // if is an implicit unit, it's px, and we return just the value\n        return +offset;\n      }\n    });\n  }\n\n  if (data.placement.indexOf('left') !== -1) {\n    popper.top += offsets[0];\n    popper.left -= offsets[1] || 0;\n  } else if (data.placement.indexOf('right') !== -1) {\n    popper.top += offsets[0];\n    popper.left += offsets[1] || 0;\n  } else if (data.placement.indexOf('top') !== -1) {\n    popper.left += offsets[0];\n    popper.top -= offsets[1] || 0;\n  } else if (data.placement.indexOf('bottom') !== -1) {\n    popper.left += offsets[0];\n    popper.top += offsets[1] || 0;\n  }\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * Modifier used to prevent the popper from being positioned outside the boundary.\n *\n * An scenario exists where the reference itself is not within the boundaries. We can\n * say it has \"escaped the boundaries\" — or just \"escaped\". In this case we need to\n * decide whether the popper should either:\n *\n * - detach from the reference and remain \"trapped\" in the boundaries, or\n * - if it should be ignore the boundary and \"escape with the reference\"\n *\n * When `escapeWithReference` is `true`, and reference is completely outside the\n * boundaries, the popper will overflow (or completely leave) the boundaries in order\n * to remain attached to the edge of the reference.\n *\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  const boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement\n  );\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = getClientRect(data.offsets.popper);\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to shift the popper on the start or end of its reference element side\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const reference = data.offsets.reference;\n    const popper = getClientRect(data.offsets.popper);\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * Modifier used to hide the popper when its reference element is outside of the\n * popper boundaries. It will set an x-hidden attribute which can be used to hide\n * the popper when its reference is out of boundaries.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    console.warn(\n      'WARNING: preventOverflow modifier is required by hide modifier in order to work, be sure to include it before hide!'\n    );\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * Modifier used to make the popper flow toward the inner of the reference element.\n * By default, when this modifier is disabled, the popper will be placed outside\n * the reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = getClientRect(data.offsets.reference);\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[placement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.\n * Popper.js uses a set of 7 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Each modifier is an object containing several properties listed below.\n * @namespace Modifiers\n * @param {Object} modifier - Modifier descriptor\n * @param {Integer} modifier.order\n *      The `order` property defines the execution order of the modifiers.\n *      The built-in modifiers have orders with a gap of 100 units in between,\n *      this allows you to inject additional modifiers between the existing ones\n *      without having to redefine the order of all of them.\n *      The modifiers are executed starting from the one with the lowest order.\n * @param {Boolean} modifier.enabled - When `true`, the modifier will be used.\n * @param {Modifiers~modifier} modifier.function - Modifier function.\n * @param {Modifiers~onLoad} modifier.onLoad - Function executed on popper initalization\n * @return {Object} data - Each modifier must return the modified `data` object.\n */\nexport default {\n  shift: {\n    order: 100,\n    enabled: true,\n    function: shift,\n  },\n  offset: {\n    order: 200,\n    enabled: true,\n    function: offset,\n    // nudges popper from its origin by the given amount of pixels (can be negative)\n    offset: 0,\n  },\n  preventOverflow: {\n    order: 300,\n    enabled: true,\n    function: preventOverflow,\n    // popper will try to prevent overflow following these priorities\n    //  by default, then, it could overflow on the left and on top of the boundariesElement\n    priority: ['left', 'right', 'top', 'bottom'],\n    // amount of pixel used to define a minimum distance between the boundaries and the popper\n    // this makes sure the popper has always a little padding between the edges of its container\n    padding: 5,\n    boundariesElement: 'scrollParent',\n  },\n  keepTogether: {\n    order: 400,\n    enabled: true,\n    function: keepTogether,\n  },\n  arrow: {\n    order: 500,\n    enabled: true,\n    function: arrow,\n    // selector or node used as arrow\n    element: '[x-arrow]',\n  },\n  flip: {\n    order: 600,\n    enabled: true,\n    function: flip,\n    // the behavior used to change the popper's placement\n    behavior: 'flip',\n    // the popper will flip if it hits the edges of the boundariesElement - padding\n    padding: 5,\n    boundariesElement: 'viewport',\n  },\n  inner: {\n    order: 700,\n    enabled: false,\n    function: inner,\n  },\n  hide: {\n    order: 800,\n    enabled: true,\n    function: hide,\n  },\n  applyStyle: {\n    order: 900,\n    enabled: true,\n    // if true, it uses the CSS 3d transformation to position the popper\n    gpuAcceleration: true,\n    function: applyStyle,\n    onLoad: applyStyleOnLoad,\n  },\n};\n\n/**\n  * Modifiers can edit the `data` object to change the beheavior of the popper.\n  * This object contains all the informations used by Popper.js to compute the\n  * popper position.\n  * The modifier can edit the data as needed, and then `return` it as result.\n  *\n  * @callback Modifiers~modifier\n  * @param {dataObject} data\n  * @return {dataObject} modified data\n  */\n\n/**\n  * The `dataObject` is an object containing all the informations used by Popper.js\n  * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n  * @name dataObject\n  * @property {Object} data.instance The Popper.js instance\n  * @property {String} data.placement Placement applied to popper\n  * @property {String} data.originalPlacement Placement originally defined on init\n  * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n  * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n  * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n  * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n  * @property {Object} data.boundaries Offsets of the popper boundaries\n  * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n  * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n  * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n  * @property {Object} data.offsets.arro] `top` and `left` offsets, only one of them will be different from 0\n  */\n","// Utils\nimport debounce from './utils/debounce';\nimport setStyles from './utils/setStyles';\nimport getSupportedPropertyName from './utils/getSupportedPropertyName';\nimport getReferenceOffsets from './utils/getReferenceOffsets';\nimport getPopperOffsets from './utils/getPopperOffsets';\nimport isFunction from './utils/isFunction';\nimport setupEventListeners from './utils/setupEventListeners';\nimport removeEventListeners from './utils/removeEventListeners';\nimport runModifiers from './utils/runModifiers';\nimport isModifierEnabled from './utils/isModifierEnabled';\nimport computeAutoPlacement from './utils/computeAutoPlacement';\nimport placements from './utils/placements';\n\n// Modifiers\nimport modifiers from './modifiers/index';\n\n// default options\nconst DEFAULTS = {\n  // placement of the popper\n  placement: 'bottom',\n\n  // whether events (resize, scroll) are initially enabled\n  eventsEnabled: true,\n\n  /**\n     * Callback called when the popper is created.\n     * By default, is set to no-op.\n     * Access Popper.js instance with `data.instance`.\n     * @callback createCallback\n     * @static\n     * @param {dataObject} data\n     */\n  onCreate: () => {},\n\n  /**\n     * Callback called when the popper is updated, this callback is not called\n     * on the initialization/creation of the popper, but only on subsequent\n     * updates.\n     * By default, is set to no-op.\n     * Access Popper.js instance with `data.instance`.\n     * @callback updateCallback\n     * @static\n     * @param {dataObject} data\n     */\n  onUpdate: () => {},\n\n  // list of functions used to modify the offsets before they are applied to the popper\n  modifiers,\n};\n\n/**\n * Create a new Popper.js instance\n * @class Popper\n * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options\n * @param {String} options.placement=bottom\n *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n *      left(-start, -end)`\n *\n * @param {Boolean} options.eventsEnabled=true\n *      Whether events (resize, scroll) are initially enabled\n * @param {Boolean} options.gpuAcceleration=true\n *      When this property is set to true, the popper position will be applied using CSS3 translate3d, allowing the\n *      browser to use the GPU to accelerate the rendering.\n *      If set to false, the popper will be placed using `top` and `left` properties, not using the GPU.\n *\n * @param {Boolean} options.removeOnDestroy=false\n *      Set to true if you want to automatically remove the popper when you call the `destroy` method.\n *\n * @param {Object} options.modifiers\n *      List of functions used to modify the data before they are applied to the popper (see source code for default values)\n *\n * @param {Object} options.modifiers.arrow - Arrow modifier configuration\n * @param {String|HTMLElement} options.modifiers.arrow.element='[x-arrow]'\n *      The DOM Node used as arrow for the popper, or a CSS selector used to get the DOM node. It must be child of\n *      its parent Popper. Popper.js will apply to the given element the style required to align the arrow with its\n *      reference element.\n *      By default, it will look for a child node of the popper with the `x-arrow` attribute.\n *\n * @param {Object} options.modifiers.offset - Offset modifier configuration\n * @param {Number} options.modifiers.offset.offset=0\n *      Amount of pixels the popper will be shifted (can be negative).\n *\n * @param {Object} options.modifiers.preventOverflow - PreventOverflow modifier configuration\n * @param {Array} [options.modifiers.preventOverflow.priority=['left', 'right', 'top', 'bottom']]\n *      Priority used when Popper.js tries to avoid overflows from the boundaries, they will be checked in order,\n *      this means that the last one will never overflow\n * @param {String|HTMLElement} options.modifiers.preventOverflow.boundariesElement='scrollParent'\n *      Boundaries used by the modifier, can be `scrollParent`, `window`, `viewport` or any DOM element.\n * @param {Number} options.modifiers.preventOverflow.padding=5\n *      Amount of pixels used to define a minimum distance between the boundaries and the popper\n *      this makes sure the popper has always a little padding between the edges of its container.\n *\n * @param {Object} options.modifiers.flip - Flip modifier configuration\n * @param {String|Array} options.modifiers.flip.behavior='flip'\n *      The behavior used by the `flip` modifier to change the placement of the popper when the latter is trying to\n *      overlap its reference element. Defining `flip` as value, the placement will be flipped on\n *      its axis (`right - left`, `top - bottom`).\n *      You can even pass an array of placements (eg: `['right', 'left', 'top']` ) to manually specify\n *      how alter the placement when a flip is needed. (eg. in the above example, it would first flip from right to left,\n *      then, if even in its new placement, the popper is overlapping its reference element, it will be moved to top)\n * @param {String|HTMLElement} options.modifiers.flip.boundariesElement='viewport'\n *      The element which will define the boundaries of the popper position, the popper will never be placed outside\n *      of the defined boundaries (except if `keepTogether` is enabled)\n *\n * @param {Object} options.modifiers.inner - Inner modifier configuration\n * @param {Number} options.modifiers.inner.enabled=false\n *      Set to `true` to make the popper flow toward the inner of the reference element.\n *\n * @param {Number} options.modifiers.flip.padding=5\n *      Amount of pixels used to define a minimum distance between the boundaries and the popper\n *      this makes sure the popper will flip before it touches the edge of the boundaries,\n *      making it have always a little padding between the edges of its container.\n *\n * @param {createCallback} options.onCreate - onCreate callback\n *      Function called after the Popper has been instantiated.\n *\n * @param {updateCallback} options.onUpdate - onUpdate callback\n *      Function called on subsequent updates of Popper.\n *\n * @return {Object} instance - The generated Popper.js instance\n */\nexport default class Popper {\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // make sure to apply the popper position before any computation\n    setStyles(this.popper, { position: 'absolute' });\n\n    // refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(Popper.Defaults.modifiers).map(name => ({\n      name,\n      ...Popper.Defaults.modifiers[name],\n    }));\n\n    // assign default values to modifiers, making sure to override them with\n    // the ones defined by user\n    this.modifiers = this.modifiers.map(defaultConfig => {\n      const userConfig = (options.modifiers &&\n        options.modifiers[defaultConfig.name]) || {};\n      return { ...defaultConfig, ...userConfig };\n    });\n\n    // add custom modifiers to the modifiers list\n    if (options.modifiers) {\n      this.options.modifiers = {\n        ...{},\n        ...Popper.Defaults.modifiers,\n        ...options.modifiers,\n      };\n      Object.keys(options.modifiers).forEach(name => {\n        // take in account only custom modifiers\n        if (Popper.Defaults.modifiers[name] === undefined) {\n          const modifier = options.modifiers[name];\n          modifier.name = name;\n          this.modifiers.push(modifier);\n        }\n      });\n    }\n\n    // sort the modifiers by order\n    this.modifiers = this.modifiers.sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  //\n  // Methods\n  //\n\n  /**\n     * Updates the position of the popper, computing the new offsets and applying the new style\n     * Prefer `scheduleUpdate` over `update` because of performance reasons\n     * @method\n     * @memberof Popper\n     */\n  update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n\n    let data = {\n      instance: this,\n      styles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {},\n    };\n\n    // compute reference element offsets\n    data.offsets.reference = getReferenceOffsets(\n      this.state,\n      this.popper,\n      this.reference\n    );\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    data.placement = computeAutoPlacement(\n      this.options.placement,\n      data.offsets.reference,\n      this.popper,\n      this.reference\n    );\n\n    // store the computed placement inside `originalPlacement`\n    data.originalPlacement = this.options.placement;\n\n    // compute the popper offsets\n    data.offsets.popper = getPopperOffsets(\n      this.state,\n      this.popper,\n      data.offsets.reference,\n      data.placement\n    );\n\n    // run the modifiers\n    data = runModifiers(this.modifiers, data);\n\n    // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n\n  /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n     * Destroy the popper\n     * @method\n     * @memberof Popper\n     */\n  destroy() {\n    this.state.isDestroyed = true;\n\n    // touch DOM only if `applyStyle` modifier is enabled\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.left = '';\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n\n    this.disableEventListeners();\n\n    // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n    return this;\n  }\n\n  /**\n     * it will add resize/scroll events and start recalculating\n     * position of the popper element when they are triggered\n     * @method\n     * @memberof Popper\n     */\n  enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(\n        this.reference,\n        this.options,\n        this.state,\n        this.scheduleUpdate\n      );\n    }\n  }\n\n  /**\n     * it will remove resize/scroll events and won't recalculate\n     * popper position when they are triggered. It also won't trigger onUpdate callback anymore,\n     * unless you call 'update' method manually.\n     * @method\n     * @memberof Popper\n     */\n  disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      window.cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n\n  /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     * @memberof Popper\n     */\n  static Utils = window.PopperUtils;\n\n  /**\n     * List of accepted placements to use as values of the `placement` option\n     * @memberof Popper\n     */\n  static placements = placements;\n\n  /**\n     * Default Popper.js options\n     * @memberof Popper\n     */\n  static Defaults = DEFAULTS;\n}\n\n/**\n  * The `referenceObject` is an object that provides an interface compatible with Popper.js\n  * and lets you use it as replacement of a real DOM node.\n  * You can use this method to position a popper relatively to a set of coordinates\n  * in case you don't have a DOM node to use as reference.\n  * NB: This feature isn't supported in Internet Explorer 10\n  * @name referenceObject\n  * @property {Function} data.getBoundingClientRect A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n  * @property {Number} data.clientWidth An ES6 getter that will return the width of the virtual reference element.\n  * @property {Number} data.clientHeight An ES6 getter that will return the height of the virtual reference element.\n  */\n"],"names":["nativeHints","fn","some","hint","toString","indexOf","isBrowser","window","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","microtaskDebounce","scheduled","elem","document","createElement","observer","MutationObserver","observe","attributes","setAttribute","taskDebounce","supportsNativeMutationObserver","isNative","isNumeric","n","isNaN","parseFloat","isFinite","setStyles","element","styles","keys","forEach","prop","unit","style","getSupportedPropertyName","property","prefixes","upperProp","charAt","toUpperCase","slice","prefix","toCheck","body","isOffsetContainer","nodeName","firstElementChild","offsetParent","getRoot","node","parentNode","getOffsetParent","documentElement","findCommonOffsetParent","element1","element2","nodeType","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","element1root","host","getStyleComputedProperty","css","getComputedStyle","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getParentNode","getScrollParent","overflow","overflowX","overflowY","test","getBordersSize","axis","sideA","sideB","split","getWindowSizes","Math","max","scrollHeight","offsetHeight","clientHeight","scrollWidth","offsetWidth","clientWidth","getClientRect","offsets","width","height","appVersion","isIE10","runIsIE10","getBoundingClientRect","err","result","sizes","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","children","parent","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","contains","getReferenceOffsets","state","popper","reference","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","placement","hash","replace","matched","getPopperOffsets","position","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","isFunction","functionToCheck","getType","call","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","options","updateBound","scrollElement","eventsEnabled","removeEventListeners","removeEventListener","find","arr","check","Array","prototype","filter","findIndex","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","undefined","enabled","function","isModifierEnabled","modifierName","name","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","offset","isFixed","getBoundaries","padding","boundariesElement","boundaries","boundariesNode","computeAutoPlacement","refRect","sides","computedPlacement","Object","sort","a","b","variation","placements","setAttributes","removeAttribute","applyStyle","round","prefixedProperty","gpuAcceleration","willChange","instance","arrow","arrowElement","applyStyleOnLoad","modifierOptions","isModifierRequired","requestingName","requestedName","requesting","warn","querySelector","isVertical","len","altSide","opSide","arrowElementSize","center","sideValue","min","getOppositeVariation","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","floor","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","map","useHeight","size","preventOverflow","priority","escapeWithReference","shift","basePlacement","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","DEFAULTS","Popper","scheduleUpdate","requestAnimationFrame","update","debounce","bind","Defaults","jquery","defaultConfig","userConfig","onLoad","enableEventListeners","isDestroyed","isCreated","onCreate","onUpdate","disableEventListeners","removeOnDestroy","removeChild","cancelAnimationFrame","Utils","PopperUtils"],"mappings":"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"}